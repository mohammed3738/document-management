# Generated by Django 4.2.6 on 2023-12-28 10:04

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_number', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=122)),
                ('address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=122)),
                ('date_of_incorporation', models.DateField()),
                ('contact_person', models.CharField(max_length=122)),
                ('entity_type', models.CharField(choices=[('proprietorship', 'Proprietorship'), ('partnership', 'Partnership'), ('private_ltd', 'Private Ltd'), ('public_ltd', 'Public Ltd'), ('huf', 'HUF'), ('llp', 'LLP'), ('llc', 'LLC'), ('aop', 'AOP'), ('trust', 'Trust')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UdyamAadhar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ua_number', models.CharField(max_length=255)),
                ('ua_login', models.CharField(max_length=255)),
                ('ua_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='TdsCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tan_number', models.CharField(max_length=255)),
                ('tan_login', models.CharField(max_length=255)),
                ('tan_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='SalesInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(blank=True, null=True)),
                ('gst_no', models.CharField(blank=True, max_length=50, null=True)),
                ('party_name', models.CharField(blank=True, max_length=250, null=True)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('invoice_no', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_type', models.CharField(blank=True, choices=[('b2b', 'B2B'), ('b2c-l', 'B2C-L'), ('bsc', 'Bsc-O'), ('nil-rated', 'Nil-Rated'), ('advance received', 'Advance Received'), ('export', 'Export'), ('unregistered-local', 'Unregistered-Local'), ('unregistered-nonlocal', 'Unregistered-NonLocal')], max_length=100, null=True)),
                ('total_invoice', models.FloatField(blank=True, null=True)),
                ('tcs', models.IntegerField(blank=True, null=True)),
                ('tds', models.IntegerField(blank=True, null=True)),
                ('amount_receivable', models.IntegerField(blank=True, null=True)),
                ('attach_invoice', models.FileField(blank=True, null=True, upload_to='')),
                ('attach_eway', models.FileField(blank=True, null=True, upload_to='')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(blank=True, null=True)),
                ('gst_no', models.CharField(blank=True, max_length=50, null=True)),
                ('party_name', models.CharField(blank=True, max_length=250, null=True)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('invoice_no', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_type', models.CharField(blank=True, choices=[('b2b', 'B2B'), ('b2c-l', 'B2C-L'), ('bsc', 'Bsc-O'), ('nil-rated', 'Nil-Rated'), ('advance received', 'Advance Received'), ('export', 'Export'), ('unregistered-local', 'Unregistered-Local'), ('unregistered-nonlocal', 'Unregistered-NonLocal')], max_length=100, null=True)),
                ('total_invoice', models.FloatField()),
                ('tcs', models.IntegerField(blank=True, null=True)),
                ('tds', models.IntegerField(blank=True, null=True)),
                ('amount_receivable', models.IntegerField(blank=True, null=True)),
                ('attach_invoice', models.FileField(blank=True, null=True, upload_to='')),
                ('attach_eway', models.FileField(blank=True, null=True, upload_to='')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Ptrc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptrc_number', models.CharField(max_length=255)),
                ('ptrc_login', models.CharField(max_length=255)),
                ('ptrc_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Ptec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptec_number', models.CharField(max_length=255)),
                ('ptec_login', models.CharField(max_length=255)),
                ('ptec_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hsn', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('gst_per', models.IntegerField(blank=True, null=True)),
                ('taxable_amount', models.IntegerField(blank=True, null=True)),
                ('cgst', models.IntegerField(blank=True, null=True)),
                ('sgst', models.IntegerField(blank=True, null=True)),
                ('igst', models.IntegerField(blank=True, null=True)),
                ('sales_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.salesinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hsn', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('gst_per', models.IntegerField(blank=True, null=True)),
                ('taxable_amount', models.IntegerField(blank=True, null=True)),
                ('cgst', models.IntegerField(blank=True, null=True)),
                ('sgst', models.IntegerField(blank=True, null=True)),
                ('igst', models.IntegerField(blank=True, null=True)),
                ('purchase_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.purchaseinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='Pan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_number', models.CharField(max_length=255)),
                ('pan_login', models.CharField(max_length=255)),
                ('pan_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('share', models.IntegerField()),
                ('pan', models.CharField(max_length=255)),
                ('aadhar', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Msme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msme_number', models.CharField(max_length=255)),
                ('msme_login', models.CharField(max_length=255)),
                ('msme_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='LoanVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('type', models.CharField(choices=[('mutual-fund', 'Mutual-Fund'), ('equity', 'Equity'), ('fd', 'Fd'), ('others', 'Others')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterestCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeTaxReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_year', models.DateField()),
                ('return_type', models.CharField(choices=[('computation-of-income', 'Computation-Of-Income'), ('financials', 'Financials'), ('income-tax-form', 'Income-Tax-Form'), ('income-tax-return', 'Income-Tax-Return'), ('tax-audit', 'Tax-Audit'), ('cma', 'CMA'), ('auditors-report', 'Auditors-Report')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst_number', models.CharField(max_length=255)),
                ('gst_login', models.CharField(max_length=255)),
                ('gst_password', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=500)),
                ('filling_freq', models.CharField(choices=[('monthly', 'Monthly'), ('half-year', 'Half-yearly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('attachment', models.FileField(upload_to='')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('party_name', models.CharField(max_length=250)),
                ('invoice_no', models.CharField(max_length=255)),
                ('invoice_date', models.DateField()),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('gst_per', models.IntegerField(blank=True, null=True)),
                ('cgst', models.IntegerField(blank=True, null=True)),
                ('sgst', models.IntegerField(blank=True, null=True)),
                ('tds', models.IntegerField(blank=True, null=True)),
                ('tcs', models.IntegerField(blank=True, null=True)),
                ('cr_amount', models.IntegerField(blank=True, null=True)),
                ('attach_invoice', models.FileField(upload_to='')),
                ('attach_eway', models.FileField(upload_to='')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('purchase_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.purchaseinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('party_name', models.CharField(max_length=250)),
                ('invoice_no', models.CharField(max_length=255)),
                ('invoice_date', models.DateField()),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('gst_per', models.IntegerField(blank=True, null=True)),
                ('cgst', models.IntegerField(blank=True, null=True)),
                ('sgst', models.IntegerField(blank=True, null=True)),
                ('tds', models.IntegerField(blank=True, null=True)),
                ('tcs', models.IntegerField(blank=True, null=True)),
                ('cr_amount', models.IntegerField(blank=True, null=True)),
                ('attach_invoice', models.FileField(upload_to='')),
                ('attach_eway', models.FileField(upload_to='')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sales_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.salesinvoice')),
            ],
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company'),
        ),
        migrations.CreateModel(
            name='BankStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('account_no', models.CharField(max_length=255)),
                ('ifsc', models.CharField(max_length=50)),
                ('account_type', models.CharField(max_length=50)),
                ('branch', models.CharField(max_length=255)),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='AssetsPurchasedBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='As26',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janauary', 'Janauary'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018), api.models.max_value_current_year], verbose_name='year')),
                ('attachment', models.FileField(upload_to='')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
